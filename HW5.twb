<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0207.2140                               -->
<workbook source-build='10.1.5 (10100.17.0207.2140)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='clustered_customers+' inline='true' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clustered_customers' name='textscan.0eocydr0n18b7d1a8rmto17dlxuc'>
            <connection class='textscan' directory='C:/Users/Justin Hubbard/Documents/Purdue/Purdue- Senior/MGMT490/HW5' filename='clustered_customers.dlm' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[clustered_customers.dlm].[ID]' />
              <expression op='[customer_transactions.csv].[ID]' />
            </expression>
          </clause>
          <relation connection='textscan.0eocydr0n18b7d1a8rmto17dlxuc' name='clustered_customers.dlm' table='[clustered_customers.dlm]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator='|'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='Gender' ordinal='1' />
              <column datatype='integer' name='Age' ordinal='2' />
              <column datatype='integer' name='Income' ordinal='3' />
              <column datatype='real' name='MilestoStore' ordinal='4' />
              <column datatype='string' name='Relationship' ordinal='5' />
              <column datatype='string' name='Children' ordinal='6' />
              <column datatype='string' name='Employed' ordinal='7' />
              <column datatype='string' name='SportsFan' ordinal='8' />
              <column datatype='integer' name='clust3' ordinal='9' />
              <column datatype='integer' name='clust4' ordinal='10' />
              <column datatype='string' name='partition' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.0eocydr0n18b7d1a8rmto17dlxuc' name='customer_transactions.csv' table='[customer_transactions#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator='|'>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='integer' name='Chips' ordinal='1' />
              <column datatype='integer' name='Frozen' ordinal='2' />
              <column datatype='integer' name='Alcohol' ordinal='3' />
              <column datatype='integer' name='Vegetables' ordinal='4' />
              <column datatype='integer' name='Milk' ordinal='5' />
              <column datatype='integer' name='Bakery' ordinal='6' />
              <column datatype='integer' name='Meat' ordinal='7' />
              <column datatype='integer' name='Toiletries' ordinal='8' />
              <column datatype='integer' name='Snacks' ordinal='9' />
              <column datatype='integer' name='Canned' ordinal='10' />
              <column datatype='integer' name='Total' ordinal='11' />
              <column datatype='real' name='Chips_dol' ordinal='12' />
              <column datatype='real' name='Frozen_dol' ordinal='13' />
              <column datatype='real' name='Alcohol_dol' ordinal='14' />
              <column datatype='real' name='Vegetables_dol' ordinal='15' />
              <column datatype='real' name='Milk_dol' ordinal='16' />
              <column datatype='real' name='Bakery_dol' ordinal='17' />
              <column datatype='real' name='Meat_dol' ordinal='18' />
              <column datatype='real' name='Toiletries_dol' ordinal='19' />
              <column datatype='real' name='Snacks_dol' ordinal='20' />
              <column datatype='real' name='Canned_dol' ordinal='21' />
              <column datatype='real' name='Total_dol' ordinal='22' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Age]' value='[clustered_customers.dlm].[Age]' />
          <map key='[Alcohol]' value='[customer_transactions.csv].[Alcohol]' />
          <map key='[Alcohol_dol]' value='[customer_transactions.csv].[Alcohol_dol]' />
          <map key='[Bakery]' value='[customer_transactions.csv].[Bakery]' />
          <map key='[Bakery_dol]' value='[customer_transactions.csv].[Bakery_dol]' />
          <map key='[Canned]' value='[customer_transactions.csv].[Canned]' />
          <map key='[Canned_dol]' value='[customer_transactions.csv].[Canned_dol]' />
          <map key='[Children]' value='[clustered_customers.dlm].[Children]' />
          <map key='[Chips]' value='[customer_transactions.csv].[Chips]' />
          <map key='[Chips_dol]' value='[customer_transactions.csv].[Chips_dol]' />
          <map key='[Employed]' value='[clustered_customers.dlm].[Employed]' />
          <map key='[Frozen]' value='[customer_transactions.csv].[Frozen]' />
          <map key='[Frozen_dol]' value='[customer_transactions.csv].[Frozen_dol]' />
          <map key='[Gender]' value='[clustered_customers.dlm].[Gender]' />
          <map key='[ID (customer_transactions.csv)]' value='[customer_transactions.csv].[ID]' />
          <map key='[ID]' value='[clustered_customers.dlm].[ID]' />
          <map key='[Income]' value='[clustered_customers.dlm].[Income]' />
          <map key='[Meat]' value='[customer_transactions.csv].[Meat]' />
          <map key='[Meat_dol]' value='[customer_transactions.csv].[Meat_dol]' />
          <map key='[MilestoStore]' value='[clustered_customers.dlm].[MilestoStore]' />
          <map key='[Milk]' value='[customer_transactions.csv].[Milk]' />
          <map key='[Milk_dol]' value='[customer_transactions.csv].[Milk_dol]' />
          <map key='[Relationship]' value='[clustered_customers.dlm].[Relationship]' />
          <map key='[Snacks]' value='[customer_transactions.csv].[Snacks]' />
          <map key='[Snacks_dol]' value='[customer_transactions.csv].[Snacks_dol]' />
          <map key='[SportsFan]' value='[clustered_customers.dlm].[SportsFan]' />
          <map key='[Toiletries]' value='[customer_transactions.csv].[Toiletries]' />
          <map key='[Toiletries_dol]' value='[customer_transactions.csv].[Toiletries_dol]' />
          <map key='[Total]' value='[customer_transactions.csv].[Total]' />
          <map key='[Total_dol]' value='[customer_transactions.csv].[Total_dol]' />
          <map key='[Vegetables]' value='[customer_transactions.csv].[Vegetables]' />
          <map key='[Vegetables_dol]' value='[customer_transactions.csv].[Vegetables_dol]' />
          <map key='[clust3]' value='[clustered_customers.dlm].[clust3]' />
          <map key='[clust4]' value='[clustered_customers.dlm].[clust4]' />
          <map key='[partition]' value='[clustered_customers.dlm].[partition]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MilestoStore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MilestoStore]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>MilestoStore</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Relationship</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Relationship]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>Relationship</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Children</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Children]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>Children</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Employed]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>Employed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SportsFan</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SportsFan]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>SportsFan</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clust3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clust3]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>clust3</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clust4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clust4]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>clust4</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>partition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[partition]</local-name>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias>partition</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clustered_customers.dlm]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;|&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID (customer_transactions.csv)]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Chips]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Chips</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frozen</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Frozen]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Frozen</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alcohol</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Alcohol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Alcohol</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vegetables</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vegetables]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Vegetables</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Milk]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Milk</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bakery</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bakery]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Bakery</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meat</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Meat]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Meat</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toiletries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Toiletries]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Toiletries</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Snacks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Snacks]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Snacks</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Canned</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Canned]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Canned</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chips_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chips_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Chips_dol</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frozen_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Frozen_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Frozen_dol</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alcohol_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alcohol_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Alcohol_dol</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vegetables_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vegetables_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Vegetables_dol</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Milk_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Milk_dol</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bakery_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bakery_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Bakery_dol</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meat_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meat_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Meat_dol</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toiletries_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Toiletries_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Toiletries_dol</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Snacks_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Snacks_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Snacks_dol</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Canned_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Canned_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Canned_dol</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_dol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_dol]</local-name>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias>Total_dol</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customer_transactions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;|&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Alcohol dol' datatype='real' name='[Alcohol_dol]' role='measure' type='quantitative' />
      <column caption='Bakery dol' datatype='real' name='[Bakery_dol]' role='measure' type='quantitative' />
      <column caption='Canned dol' datatype='real' name='[Canned_dol]' role='measure' type='quantitative' />
      <column caption='Chips dol' datatype='real' name='[Chips_dol]' role='measure' type='quantitative' />
      <column caption='Frozen dol' datatype='real' name='[Frozen_dol]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='ID (customer transactions.csv)' datatype='integer' name='[ID (customer_transactions.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
      <column caption='Meat dol' datatype='real' name='[Meat_dol]' role='measure' type='quantitative' />
      <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
      <column caption='Milk dol' datatype='real' name='[Milk_dol]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Snacks dol' datatype='real' name='[Snacks_dol]' role='measure' type='quantitative' />
      <column caption='Sports Fan' datatype='string' name='[SportsFan]' role='dimension' type='nominal' />
      <column caption='Toiletries dol' datatype='real' name='[Toiletries_dol]' role='measure' type='quantitative' />
      <column caption='Total dol' datatype='real' name='[Total_dol]' role='measure' type='quantitative' />
      <column caption='Vegetables dol' datatype='real' name='[Vegetables_dol]' role='measure' type='quantitative' />
      <column caption='Clust3' datatype='integer' name='[clust3]' role='measure' type='ordinal' />
      <column caption='Clust4' datatype='integer' name='[clust4]' role='measure' type='ordinal' />
      <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
      <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
      <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
      <column-instance column='[clust3]' derivation='Sum' name='[sum:clust3:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.275779' measure-ordering='alphabetic' measure-percentage='0.724221' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.00ayd3a1minmd61d0jpxo1rpfw07]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:partition:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Train&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Test&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Q19'>
      <layout-options>
        <title>
          <formatted-text>
            <run>K=3</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust3' datatype='integer' name='[clust3]' role='measure' type='ordinal' />
            <column-instance column='[clust3]' derivation='None' name='[none:clust3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:ok]' direction='DESC' using='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <groupfilter function='member' level='[none:partition:nk]' member='&quot;Test&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' field-type='quantitative' major-origin='0.0' major-spacing='50000.0' max='100000.0' min='0.0' minor-origin='0.0' minor-spacing='1000.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' field-type='quantitative' max='80.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' value='bold' />
            <format attr='color' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' value='bold' />
            <format attr='color' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Q20'>
      <layout-options>
        <title>
          <formatted-text>
            <run>K=4</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust4' datatype='integer' name='[clust4]' role='measure' type='ordinal' />
            <column-instance column='[clust4]' derivation='None' name='[none:clust4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust4:ok]' direction='DESC' using='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <groupfilter function='member' level='[none:partition:nk]' member='&quot;Train&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <sort class='manual' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Test&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' field-type='quantitative' major-origin='0.0' major-spacing='50000.0' max='100000.0' min='0.0' minor-origin='0.0' minor-spacing='1000.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' field-type='quantitative' max='80.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]' value='bold' />
            <format attr='color' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]' value='bold' />
            <format attr='color' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust4:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Q22'>
      <layout-options>
        <title>
          <formatted-text>
            <run>k=3 (relationship)&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column datatype='string' name='[Relationship]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust3' datatype='integer' name='[clust3]' role='measure' type='ordinal' />
            <column-instance column='[Relationship]' derivation='None' name='[none:Relationship:nk]' pivot='key' type='nominal' />
            <column-instance column='[clust3]' derivation='None' name='[none:clust3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Test&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:ok] / [federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Relationship:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q23'>
      <layout-options>
        <title>
          <formatted-text>
            <run>k=4 (relationship)&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column datatype='string' name='[Relationship]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust4' datatype='integer' name='[clust4]' role='measure' type='ordinal' />
            <column-instance column='[Relationship]' derivation='None' name='[none:Relationship:nk]' pivot='key' type='nominal' />
            <column-instance column='[clust4]' derivation='None' name='[none:clust4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='DESC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust4:ok] / [federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Relationship:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q25_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>K=3 (Gender)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust3' datatype='integer' name='[clust3]' role='measure' type='ordinal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[clust3]' derivation='None' name='[none:clust3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Test&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:ok] / [federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Gender:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q25_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>K=4 (Gender)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust4' datatype='integer' name='[clust4]' role='measure' type='ordinal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[clust4]' derivation='None' name='[none:clust4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Test&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust4:ok] / [federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Gender:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q26_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>K=3 (Sports)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column caption='Sports Fan' datatype='string' name='[SportsFan]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust3' datatype='integer' name='[clust3]' role='measure' type='ordinal' />
            <column-instance column='[SportsFan]' derivation='None' name='[none:SportsFan:nk]' pivot='key' type='nominal' />
            <column-instance column='[clust3]' derivation='None' name='[none:clust3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Test&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:ok] / [federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:SportsFan:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Q26_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>K=4 (Sports)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clustered_customers+' name='federated.00ayd3a1minmd61d0jpxo1rpfw07' />
          </datasources>
          <datasource-dependencies datasource='federated.00ayd3a1minmd61d0jpxo1rpfw07'>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Income]' role='measure' type='quantitative' />
            <column caption='Milesto Store' datatype='real' name='[MilestoStore]' role='measure' type='quantitative' />
            <column caption='Sports Fan' datatype='string' name='[SportsFan]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='Avg' name='[avg:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income]' derivation='Avg' name='[avg:Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MilestoStore]' derivation='Avg' name='[avg:MilestoStore:qk]' pivot='key' type='quantitative' />
            <column caption='Clust4' datatype='integer' name='[clust4]' role='measure' type='ordinal' />
            <column-instance column='[SportsFan]' derivation='None' name='[none:SportsFan:nk]' pivot='key' type='nominal' />
            <column-instance column='[clust4]' derivation='None' name='[none:clust4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[partition]' derivation='None' name='[none:partition:nk]' pivot='key' type='nominal' />
            <column caption='Partition' datatype='string' name='[partition]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Test&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk] * ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Age:qk] + ([federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:Income:qk] + [federated.00ayd3a1minmd61d0jpxo1rpfw07].[avg:MilestoStore:qk])))</rows>
        <cols>([federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust4:ok] / [federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:SportsFan:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Q21'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Q19' w='49800' x='0' y='0' />
              <zone h='100000' id='7' name='Q20' w='49800' x='49800' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Q24'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Q22' w='49800' x='0' y='0' />
              <zone h='100000' id='7' name='Q23' w='49800' x='49800' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Q25_3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Q25_1' w='50000' x='0' y='0' />
              <zone h='100000' id='7' name='Q25_2' w='49600' x='50000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Q26_3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='100000' id='1' name='Q26_1' w='49800' x='0' y='0' />
              <zone h='100000' id='7' name='Q26_2' w='49800' x='49800' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:qk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:clust3:qk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Q21'>
      <viewpoints>
        <viewpoint name='Q19'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q20'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Q22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Relationship:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q23'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Relationship:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Q24'>
      <viewpoints>
        <viewpoint name='Q22'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q23'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Q25_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Gender:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q25_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:Gender:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Q25_3'>
      <viewpoints>
        <viewpoint name='Q25_1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q25_2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Q26_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:SportsFan:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q26_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:SportsFan:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[none:partition:nk]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust3:ok]</field>
            <field>[federated.00ayd3a1minmd61d0jpxo1rpfw07].[sum:clust4:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Q26_3'>
      <viewpoints>
        <viewpoint name='Q26_1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q26_2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q19' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q20' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q21' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q22' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q23' width='192'>
      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
      iAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q24' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29aYwk6Xnn94uMyPvOqqy7uqr6qj5neqa759BwRsMZ7Qo0peViqbG1gGCA
      JumFdrEL+8OCtmV4CWNlmIABQzAgCJZk6oOhY0XtiqIoiwvxmCGHnJm+u+vq6u667yPvMyIj
      wh+qqyrPysruzMjsqvwBja6IjHjfN96IJ96IJ57n/wq6ruu0aXNMMTW7AW3aNJO2AbQ51rQN
      oM2xpm0AbY41ewYw/mCi7AYT92/z2SefEE7KACxM32dmZbvstg/GC8uIRaMARLc3kbXqjcnf
      f3Nzs+C3reXHjD9erl5Im+rIIcYfrpb9Kba5wr2Hs0+XdD788EPKeUkejk8gF6zRiEXjQOm5
      K0tijQfzoZ2/cxk2w/G8H3U+/OijsvXWG/Gb3/zmNwGePH5Cd4eTpa0o8w+nWFpZAbOdkZER
      JC3O4nqK3i4/dx5M8srlCzyaesBGJEMqvM7U43l6+vqYefIEu6QzOfUQk9XJD//ur5EFKxZR
      xOVzM3HnFgvrIXp9Fj767D6raxv0djj57OY9VEFi/vEU0VgUWZNQZRmrnuDTe9NshSKcOjPK
      5IO7DA8PGdAtRxwlypOlDHJqm1wmweTDR6xshunrDvDprTFycooTgwOEZu6hBM4hJzbZWl1E
      tFi5d/cesi4S29wgONjLxK1bLG9FsegJ/vbvfkT3wAmy6RRaNs6D8SkEi5OV+WkWFheRNYnQ
      2hxPZlYI+iV++OkkyXiEgV4/oajK0uw4C3MLiM4A3eYEcyknXR5rQ7tibwRIx0N8/0efcKKv
      EwQBQRAACK0vM7u0jc1u3tlB3Pl/7OETzp0e4uc//xiSy3z6YAkANZcDQeTOvfucOHWGVy6f
      Z3VpiejKOFnPCMOuLJPzK4jeQcy5DKHwJomsiihJ2F0+Xn31GkvzT1haXCITWcU/dBEpvk0k
      B6a2x7Zu3P35P5CRPAiAIAgIwMf/+W+RTRKPHj0ik4PZ5SQnh3wszkzjCg4xcevnqILIp598
      ulOIrpPTNCbu38fV08eZM2fp6fCyuLTE2PQTXnvtNZ48HGMznNw7r5sbG2gmEyZg+PR5zLkM
      2VyCpZUw0VSGa6+/zvSD23SODBN6MtfwfpB2/7C7A5ztdjM2vcLLV68+Xatw57PHmM1mFHln
      wNO1HABd3d0IQH//AGZPB6PDHUyML/HoyWNcviAmkwmbCLceTAJg8/Wx/uAOURRevXKW8LaA
      gIBo9+JzRpicmMBh2zEuBIHd8e/h2F1sOZkLEmhCw/vj2HDlzXdZeXifs//ofYJ9J3ZWvnwR
      gI9FHZsEQY+JzbAMFgfdATfZgSGWQgleeuklMqENlOgqc5spLJIZHYnt9UXWt88A4LKIfPbZ
      Dcw2N6qS3ilfEPAHOliae8JKx0UEwcaO6e0QD23w2aef4O7oJb21gTXY1fiO0Gvk3qc/1beS
      cq27PRPh2Zv6+Gpa13Vdz8TW9Z/fHDek3jZPyaX1H3/4c8Oq+/kvfrb3989+8hNd1hpfp6Dr
      NT5X6CqRaBKfz9MgkyxPLBrF7fXSHgSMJRIJ4/X5De53nWg0htfrbXhNtRtAmzZHiPZ3gDbH
      mrYBtDnWtA0AuPnJz5hdfMzEg/mC9YsLS6wtzvLjn34CgK7Euf3gEcgh/ua7P2Di8QIA4xMP
      nu6RYWlhk3A4XLaeBxPjkMsQjqcbdixtDoPGzz/6MbNTd/bdoMeZhKxxbbCTv//oe8jqBdYj
      MslElMTWNl/89X9MPP4IgMdTjzlz7gqo6ywtLNMdtPB//PBnvPXyEH/953+C6nQip7yM9JnY
      2sog6VuEZBtOXycmyYYaW2J7fpzlLRGnT+TqO7/GoLd9CgxHT5DTvfT6rG0DABjsCjC7GGH0
      laushLY4NXySWMyHZaCLaCTCwMAAAAkF3GYBBBdf/PVfRZYTvP2qn77eAHazGUegk0Q4Tlen
      H6t1Ea/vJGaHi1gqh6IoBM4NQSaCSVgh4fDT5W53f1MQPHT6YT0ltqYXKJfLIUnGXRyHrS+e
      iON2uQ2ts540o87D0oi2HabMlnwHSKVShtaXTh/umbxeFz8Yf4zNqvOwNKJthzmvLWkAz0I2
      nWB2YcnQOkOba8wtlo+qbAiazPTDKda3o8bV2WKENhfY2K6fsRwZA7DaXdjMorF1Wm14PfUb
      FapismAzg3aI0PKjSiAYQJXVupV3ZAwgk4iytbVFRjHu6ohGI6QzGcPq05QMGUXAths0eAxZ
      X9kinorUrby9l+B4PF5tW8NIpVI4HI4jW1+z6tR1HY/HQzabRZbl6jsYSCP64zBl7r0iu90G
      DuVV0HXd8PYYXV8zjjEWiwFgtVqxWhubaFIrjeqPamW2pk+shfjhrVk2Ism95UsjQS6f7OZ3
      /vBHBdv97tff489+OMaf/3CsYNvf/fr7hrX1qPGl/+nP9/7+91/7PBvhFD+6vZOuOdLr4/UL
      A/zPf7R/Hr77v/1mzXW0DeApD2Y2GJvd2Fvu8jl4/+pJfnR7tmD9b753kcsnuwvWtXl+xmY3
      +dZf/N3ecrmLeSOSzOt3ndcvDDx3vW0DeMrY7EbJ3fv9qyfrUvbMSphkRtlb7vI7sRvrsDo2
      5I8a3/ivrvNLL7f4I9Di3BPcgU5WF5YYOXcBm3T0Ul7++Pt3SkaRL752fJP7tzdWyeoWcqkQ
      Tn8vHT5X09rSZAPIsbq6iZJM0zt6ks3Vbfr6/GiaRi6XM6wVqqqiFTnXdX3nU3pxpIim62Xb
      lsvlairD6GNsJVZXVnB19CKZ7aTiYXxuO7pe2HfFfaNpWkH/6jpomnrgPvoh+tgQA0jHQmwl
      NQZ6O4tS6yQ6Ah5Eq5WFiUecOH0BURQxmUyGxqzs1pmPIIAkSXvqGLuYBKFs2yRJqqkMo4/R
      SFZWVnB7PLhd5e/sgY4OErKMIsdxBHoRRRFBKOy74r4xmUwF/SsIYDKJB+4jHKKPDTkDk1M3
      +fjHi3z1G1+l2Ct7avSCEU1oYxgZ/uOffocrb73F5968WnaLvsFhY5t0AIYYwInBs4SvW0hG
      EjgO8bw3uxrhP/zFzYJ1v/v19xrVvDZ1xcK11y5hdjmb3ZBDYYgBLC6skEmkmX70kOD18neF
      fJIZpe1mfGHJEonKLN3/Kecun6PVzaDhBqDrGi63g+xSiOvXXm1IHX/0t7eZXd2PD3nv1eGK
      Lsz1cHLvY8ouv3aMPTL1JhlNgZ7lzS9+oeUvfjDAAKKr80zNrSMrCqJQ6uKMR9aRNTsbK4tV
      3aCVvrTOrkYKRoxLI8GKZWyEkwVlQNsA6sntzz4lEYohHRCDo+fSzK9GMeXireUGjUe2uHN/
      kpdfeQUlkyaRUfA6bZhQyepmujp8NVfg6xvh1/tGyGWzZX7VCEVDJFdl+q6e2XOD6mXifWt1
      M+ZyOf7dtz8qWP+VL7xc4jqD4+sGvfXxT+k4dQa7ICFoGWzeAEoiSTydZvDECcRn+CTz9j/6
      LwDIlj3fOyytbKBrYGo1N6jb18nQiROE1tdwuZ3MP5lhYHgQs0lAlGSgdgOAnQssth3G2ddD
      geNKzZHJ5MBV6AYVTKVR2rW6GSVJKnmPSMu5EtcZHF83aF//CQI9LhYeJdBzYVJbIZyKgrO3
      k40E9D5TbJqOouSIRKJ0d1fQ9tRyRGIZXGat9dyg3T3dCIKAJGgMnxwh2NVR9tGlFm58/CEr
      yxv4Rs7y3ht57wGihdHRy89V9ovMg5lCAx3p9eGyWwyrP9DTjRkzJ07YiIZUetw+JF3DbLM8
      hxBxmu/91d+zML/Af/uN/67E7Q0wOHyKwedody3kh6F0+Z2MzWwUBNSVGIDNZtv7e+hEf10a
      0RXwML2R5lcunqlLeUeF/EhG2Il4dNos/PH37xSsf5ZI0z8res9579Xhkvgj69NzbbVCV299
      zjWYSSc2+eV/8iVs1TduOPlhKL/53kUQhIKAOkPGYLsnQLczgrWFcg5alVpdwOUC7br9zpIX
      /UsjQYY67XVr50GcHr2AoKsvRLphww0gHQsxs7BMNJZoKzs3gHKBdv/8V5r3WDk9Ps7G6joj
      g/WJpG00DTcAAQHJbMZiNpc1gLknD3H6OtlaXTuy0aDHCVEUkcwSolg53ntjZZG0bkaQW8wN
      2ghsHj+vv/5Gxd/9/g4i62v0jo7U3Q1aTPH+uzTLDXrY9jXy2OvNqXOXOXXu4BHI4/OjRJPo
      BrhB8/tH0/WdHfPKaPJjmsbs7Cw2n4+FiUe4A966ukGL2XGltY4b9LDtq9extwoL87PkVJ10
      PIzJYm+oGzS/f4r7XRCang9g4srV6wB0180L0abVOXt+d4ToaWo7oOkjQJs2zaUlDEDNxrl3
      7y6RpFJ94zZHhkeTD1he22pqG1rCANLhKEMXzhIPH1/Ny+OHjt3tR1OaO1lISxiAq6ub1elZ
      gj0dzW5KG8MQ0JQ0Dre/qa1o2EvwrgrZYekfHEROxZEBt1Xgi9dPlJQ31GkrWN/ldxKLxbh+
      poOhzrwQjqCdWCxWUoZd0oDSslOp1HOXXWv70un0odtXv2NvDNls9sDoz0r4OroBjVgsVnLO
      i4/BLmkFfdDld2KXtAP3cVuFgv4ZCu58Cc8voyUnyIjFYng8zz8P8WGDzeLxeFNkCutxjK1e
      Z0H94S1Wt+MEPTYSioDf40RRFLxeL/F4HFeFJPpnJZFIVC3zSMgSVJIvLBdsdvlkt9HNa/OU
      RDxOPJHAaZMQdJidvEvX2WsNUwIRRbE1VCEaTSX5wnIk0nJB+iTAcNCYILHjjihJWEQRtBxp
      xUT/qfNkkmHwNa//m2YAj6bG6ezuZnFhGY83iMMh4PZ3YzebGqoKMbsaKRkZ/t//8Yt1KbvN
      wXT3DdLd1+xWFGKIAdy78Q/cvR3lg3/x5acJEjmi0QSCkqH79Eusjd1my+HmarAHVVVJpLIl
      IcG5XI6f3J3nx3f25/Id7vHylS+8XJdYIKPTE1shJbIxZPjjP/gOL187z7Vr1RVAmo0hBtDf
      P8KjpWn2Feklurs7sXn8hOanGThzHptFJyWrOK1SxVigzWi6yDD0Z4iHKY02PcyzYr1phZTI
      xmBj5IQTZ6C35JddTVAtHcHqDWATRRRNIOBrXp6IIWdg5skcNrOECns5wYPDpwAIBgJGNKGN
      YWRYWQ3Tdbr0q/6eJqhkIZMI8WBqkXd+5d29aNx6j4iHGdkNMYBcTsPrdbcTYo4FKpJkx2Yt
      dTfvaoLmcklsHj8XL5xlOxSlu8N7tL1AwydHmF7Yoi2JfxywM3yyFyj9vNRKmqC7GBIKEY/H
      kRNJ2qFuxwGFZEJuqUkXD8KQEUAz2Tg71E++DyYeWUfWHWytLNDZO4jFrCHZPNjNLRGe1OaZ
      0egbOgPUHhrRDAwxAKeY4fs/neRrF849XbOjCKdsr+MbPc/S2G1yTg+vXvSiqmpTUiLbbtB6
      YePBZz9g5No/bnZDDoUhBrCyHuaVS6P7K54qwul2O+uPJ/B1D+Jwmqq6QeuTFtg6btDJhVDB
      OqOFsRpDCpOlk05fqTRudGuN2dUoFj2F1eNFTcr4+/oJ+o+wGzQV2URGgvyJmY+5Itwu9YhV
      qqQL1Cwm703RNdCFqpZqsC6trJLO6Pi7/Gi6wvr2Nr0jJ4+2G9ThC/LOO5XVmo8S6+EkG+H9
      oDynzczJvvrEu1dShqukC3QYZbhGcP7lq5yv8NvFl14hk8mQikewefrp6xtBVRVE0dIwN+i/
      +/ZHBcpwl/KmuO3yOYx5BFJVlej6Js6+HlprfvJnJ386TtiZ1/ZHt2fLXqTl5i+4fqazbLkP
      ZjZKRoZnmQC6ecpwO+K4oVC4rDiuzWbDZstPhjcb0KZ98qfDvTQSNMYAKorjHhPKz19Q3gBe
      fKqL4z4rP7w1W3Wm+N/5w/3l//Kd01XLNMQAyonjbqwu4fR3E91apyMYRDLpKFiwNckNWukR
      o5bZZ9rAs4rjJjMK81v7N4nLJ0tHj8PMFJ9/oznMXMxNE8e1WKysz00g+fuZvDeG5nRy5cJo
      09yglcqeWQkzPre5t/7CcGdbGa4KlcRxdyURRSVZEgw3uxrhW39xY2/b4rv5V7/4SkPa2vDb
      bXlxXI3JyUmcbh+bK8tY7G4CbitpWWsrw73gynC74riSo/R9w+PzI5kEeBoMd+PT23i87p2b
      XhlpxLHZjb1/8VSmLtKIxWU0SRzXxJufeweA7v72/FxHiYPEcRfmZ7G6gyjJWEkwnFHSiOQt
      GyKNWE0ct83R4iBx3FaSRNyl6YE3K0tLZLNZVCVDRjHuObVNG2iyAeRia+TMNibvjXFveg5L
      OxCujcE09Yozma2FL8HZ0s/nbdo0kqYmpZrsfq6+0lxpvDbHm4Ypw+VLI848vMWTxxne+eJb
      hwqFSKfT2O3GacUYXV+z6gQaogxXKI2o8P2/+TGj509x+sypQ5fRiP44TJkNGwHyO9rt8WN2
      btPh8Rz6mctICT9BEAyXRgRjjxFq12s9LFarFat199Ym47KZcAaCNR9fvfvjMOfVkHcAJZXB
      2+Gl/YR/PBAlEYtkbJDbs2LIO4DJbCMd3SqTJt3mKGKxWIlGozDYfB3W3/nDHxWEQxdPIWuI
      AUhmCcliOVAWZW5ujuHhYSOa80JS60zxzUPAYjEjmV8M0S8DWqnw6S9uE+gZqDgCZJNR1kMx
      hob0vekwjcyXfZac4C//L98pWP6r//U32IgUJ8RYGOn1ld1f07SCYC+Ar3zhZYZ7vBW3z2c3
      GG52NUIys59t1+V30lUmHdEoVuYnmFuK4OuvPt5Ht1ZQrR0E3IfLEslPOKpXslHDDSA0P8/V
      t17n7thcxW1yqgq5DIm0jNthNVw2UBRFPry3uBdrDjvx5l/7tcPnLkiSxIf3Fg99lzaZTCX6
      p2k5V/G4KwXD/cnf32+pmeJjaSunhz2ouSpvfLpKJLKF7nTjdUishxJ8/8bC3s8f/PK5kl3+
      4eYT/sOPJwC4OBzkX/+z6/zkXuV9doLsCoPhim90Db/KnH4vt+484Y1XRiu+cTs9AV5/7bW9
      5bHZTb71F39XsM1BWVGV5geohcJYcygn7NTmEChJgsPnMVdxeWg5hYysIUhpRNHNZjRdcPP4
      5+9fKtmnOBhuK5Y5cJ+d+YcLg+GKbzANNwCrJ8ibL8HDxU1OVN/8mag0P8BhZ4hpUz/OXb7K
      xP1b+AZHD9zOZLYxeuGKQa2qjCHPGZOTU2xuJUi/dAEjP/20Z4hpBmnm59bZTmgEf+l6sxtT
      Qr4z4dJI0IjvACoIEl53Wxz3OBCPhHG4/Pj95V/+Ww1jPoQpObKCdmQUIdochEAmGUa0Nc8T
      VQsGPAKJ+L0OHk4vkQFDH4HaGI/b5yecyDKQjADGz4eUr4dUSXomH0PeASxWHYe949g+ApXz
      UlXS6Ck3iV85hYTWxYTL4cBiaY6zId8rNNRZ/R3EGHFcl4eMFuW4+l/KeamGOsvnQpebxO9Z
      hLGKhbv+/dc+b5AwlojDkkMz1yKK0jwa/g6Qiqxz8/ZDdF2pOD+ApmR4ODXOdjTd6Oa0aTB3
      P/sFCTlHNlt9NoiFmUesb0WqbtdIGj4CmCQzJnTiqcoXt0ky47S7cNotB+oCVaIWbZzHS9t8
      +/+7V7D+337wasVQg8PS1gXawWa3k02lkJXqfecLBMhqVJRFKaYesijkLRsii6LKOVyBAHan
      VvEdIJeOE05l8OZy2CzWirpAlahFGyctqyUhCAfpAh32K3O9dIHKybe/SLpAak6ld3AQ5yE+
      OM7NztA9eObpF9tSWZT8F9r3Xh1+MWVRsskod+/cxekJ8laFbSSHj8vnq/uN87UhofZ4nWeh
      llno28DCzDSPV6O89V5/1W1feuXgl9TiuKpG0HADCAye4d/86zPVNzwE7Xid1ucLX/6tZjeh
      JgwZF1VVJbSy9oLMGtXm+dBRFIX19Y3qm7YAhhjAjY8/5Ccf/oSPP7ltRHVtmkqa7/3V9/iz
      P/lTUs1uyiEw5DtAf28PqqOTy6MjRlTXpqmYCXS4eOmND2qSR28WhowAFquZezduFcijF6Ap
      TI6Nk8m1n+lffEykolusbkerXlwLs4/YjiQMaVUlGm4Auq6xuR1meGiwohs0sbFO7+gIm2vb
      jW5OmwaTjIYQLB6CHeVTO/fRMZntpOJhQ9pViYYbQHR1ntnVMLFYnEpztNn9XhYmHuH2V+u0
      Nq3O7c9ukAyFEaqKXAmk42FMluaGR+69AzRqanvR3cm7b3eSy2aJxysbwcjJk6BliMczmHSF
      oc7CJ8h4PI5d1ArWd7ok4vE4nS6xYL1d0ojH4yVlaMqOH6p4fSqVeu6ya21fOp0+dPvqd+w7
      F1s2m0XOn7a2jlx54+29OqpdUz0Dw8DO8RWf8+Jj0JRsQR90uiQ0JXPgPiZdKegfu6QBQkEZ
      DZNGfB5isZihqmnxeNxwZTijj7FZdR6WRrTtMOe1rUfe5ljTNoA2x5oXQ77LALK/+H3kT35/
      b1kcuIbjgz9pXoPaGELTDeDR1DgdnUEWl1cYOn0Rn/PFEFUtR27xBurS/lSfJk8f5ov/tIkt
      ak2W52cQbF6SoRUc/l76e5o3aXiTDSBHNJpASaYZeukC8bUobpu/KdKIz5sPAKAsfErusz/Y
      Wzb1X0MY/bWy2xp9jK1ENBrFJIPL7UdT0nv9X+/+OIzkpSEGsL70mOWNHC+9eo5iXa7u7k5s
      bi+r07OMjF5AFIWmSCNWirfP/OR/R9t8uLfefOFLFe/qaoUylPG/Rout7Nc3cA2T95yhx2gc
      Gjdv3KF/oJ/e3vKzQXb39JCQBTQljtPfu9f/9e4PURSrlmnIGYjHw9y9McOlV0v1HgeHd2YR
      CXY0bxg8CG3zYcFjjThwDYDUX36lYDvHB9+uWIYy8d2CMixv/DZ4S/viaKAwfX8Mk9VZ0QA6
      unrpAFphulRDDMBsdjF0JsjC/Aqnh4yXymgE+Rd0m3xMDJ06wcbGGhrnmu5mzB99xYFrmDz9
      e8uC1W2MAWQzMtmkQiaTrL5xmxccnUwqSzapsP/tuXnkj76WN34blZt73j5x4FrjDTQdC7EZ
      iZFIpTk7Wp/MsDaty/T4BKlEglPXX236xX8YCkaAeGSLlfVthk6ewVanSasFBCSzGYvZXDYa
      dHN1hoxsJRTZfOHdoC8ac08eYnYG6O+pX76tKIpIZglRrBT1BZlEmNnVGFIu1lpuULevE1sk
      SSa2yaYsoMS3UWQVe7CHE93P1kibx8/rr7+BksmUDjdqhqnHM5gyNi6++2pLukFLZEe08rIj
      NUmXaHrFY9SzcbTNqYJ14kDtKsv5H/UAzBf+KUiFwgNW0Uagy8eTR49wuNxous7S/BxXrr+J
      9Rkfjk+du8ypc5fJZDIVtxmfmELGwmBfd8PdoKZ8WRRNJz+PvKIsyuzjhyQFL0JihWDfmedO
      Pd9aXWBsbJrR62/Q63Pt/yDaePvtd4iEMi3rBpWLZUdM5WVHJEmq6AYtV4bJZILVO4XtCI6i
      hh4j/6evF6x3//dj1Er6xv9dsGwZegO8pcobWjrK7fsTXDh3inBSpdPtQHguDUuNuzc+I54z
      8/abV8tucfW1N4lEIsTCmwe6QbO/2Ddi84UvYfJWV5rIp2SCDJNAvuxMWVmUoeEhhoZ3Zfte
      rqnCSiwuLJFMK8w8ekjv9eJOseALWPAFLtalrmrkFm+Q/k6hC5Ov/cKQuospbof9N/4fyukC
      QWO+Mvc+Pc8ffPlLz1VOIVnW1iIszS/y6ptXqaQR7fP58PkOlsIpDk05jAHE/8/9WWJyv/p7
      FcPvdzHkNtvb20MkrfPatUNq+GTj5BYfFqySBis/BqT+8islfnbrm//qmdraqqhLN0ouiNYM
      s5DwuK18/ku/XvHiL4e2+ZDUD/aP76DvKvXEEAPQAbMkctixVd18SPoH/6Zg3bM8BhwH1I0p
      9Ox+4onJ01fzo0K9kSRLWXnLg9Cz8arfVpTxv0aZ+C4ApuAo1jf+JWreV/qDbpIV21rzHjUS
      Xp7h0/tTxCMp3vhco2srJLdY2KFi8OB5q15Esh9+q6VGvw9/8ANWF7dwn6p/X2uxlbxj1Xdu
      lHmPkc9yk2y4Afj7RngpkWJmYbvsy/Tc44eYzBbCkWhVN2j+HQB27gK2d/+HitvX8ozdpj68
      9ktvceOz20gHeHTWVxaJZTTItpgbtCEIAidHL3Gywg3B4XShptIMXTi75wYtVgqGHXdiLrJU
      cLfTnyohH9ZVWUkhuVlu0OIXtLqoQ9d47PXG7vbzzvsHz2Bvszsw2UxkU+KeG7SaOvTuBOq7
      HEodWtcL1aHLuEGbHKqhEdreRvL5WZ2eJdjbUVYpGGpUSK7gqjSZTCWKwnCwG/SwZdfavkrq
      0OXaV69jbxUi4RCpVBZNSeNw+yuqQ+ez0zc1qkMLQokbtLiMJsfjmjh36SUAgh0dzW1KG8MY
      OrkbEtP8aNDWuS20adMEWsIA5PgWt+/eYSPcniLpODF27yYzCyvVN2wgLWEAalame6CPbKYx
      Yk1tWhEdt7cDQa0+l1gjaQkDsHf2QkZhoLctjXh8EHDabfQODDS3FY1ShovFYs+8byqygTUx
      X7BOHLiOHltBiy3vrROsHkzBUbTNh+jZ/fpMnn4ET1/Jl0UxuJOGqBZFW8odl7Ap4ecru8b2
      Zcx+LNuFH24qta9ux251N0QZLpvNks0++/QnmqaRCq9jyTvn4sD1wtin4DnIxvf6QLC6ETz9
      BZGzxfvIriGsSmjvS7nJs/OFvKCMtjRiWxrRKDZXl1gNJ+l0WUgoAh0+F9lsjr6+noZJI9oW
      fliQEikNvlawzVGUJWg5yqlCHN2k+MooioKSzZLzOLBbYPnJJMEz5UOm61ZnUUpk2wDqRHGc
      0UGBWMdLFaIyTpcTZ0bHaZFIKgIj56+gKBnA0bQ2GWIA6ViIraTGQG/n00gcnbG7d+jr62F2
      eRObZMfpNdPdO4S9TqmYjaY4zqgdrbrPysoKbo8Ht8tVsN4b6MIb6AKgWZ89tQ4BcscAABCm
      SURBVOiy8aoQk1M3+fjHi3z1G199ausaqVSG1aUFgv2nCc3PE8LB4KDQsPS4gziMglg1aprJ
      /oCUyBefDP/xT7/Dlbfe4nMVMsKaiTLx3QJVCEMMoDs4xJmXzezHeYqcOj2C1d1BbHuDCy9f
      QpRAllXsVqkpKZHPW99B+1dKiTyaynASFy+dJtjTW/LLriZoKrKG1e3HoumYnB6CfmMdEPkY
      cgbW1jfp6uooCETu6NrpIFeeH9heLX+tCRyHbLP6kiOZVnHYSsPadzRBBVxOD7qaZnxqgbff
      f7f1kuLrjc1qJZZR2vO6HwsEzJJILlcafr2rCUouid0b4PobXcQjMQIBb8O0QWtOim8EZrOZ
      6OpW2wAOgboxRfbDbxWsMyo/tj4IiKKJaDQKg90Fv+xrgrYOhhiAw+nA5nZVzdB/0cn3MMCO
      l0HsquzuzFcwgP2MtXrojuZLisCOrAiCEc/aIi63DYezea7NWjBGHn19EzmWRGZfK3JzdYas
      6iC0vY7HG8ThEHD7u5vmBq2H7Ei+hwGMmWWmknx7sTCWcR/fZKLRLJplg7MjzY3zOQyGGEBn
      h49oKq+yp4pwdt3B4NXrrI3dZsvh5mqwp2lu0EqTW7RKSqQ69Teok9/bWyd0nsX89r9F3ZhC
      W765v77vKkITUyJBQjKpdPeVUwHXiEQSaEoKmyeAiICm5bBXnVO4cRhiAIlkCrs9b97aXUW4
      cJb1+WkGzpzHZtFJySpOq4RJScLqo8KGHvSltUyoQfEn7130TKxASgNA9J1rjjJcETvrSpP2
      JUlCja8VzlOAXlP7jEuJ1MhpOqYyx7GxvMR2SsVhhmhijrXFTS699lrFm176/7qy97f1n/0R
      pv5rNbWkJbxAqcgm27E0UOwWs+DzW/D5SxXhKukCVXrGLhdqIA2+VlYWpVhKA2iaMtxRZPLe
      A+weN2pRwjpALJEgEs2g2wSsHi+Bzg5SyRTuDm/JTa/4hlfOS1R8M5MGrxecc5Otr/leIIcv
      yDvvBMuL49ZIrc/YbVkU4zn/8jXOQ1lx3NOjFzhdYb/im1650JJiYSzp1PslukD5y+qv/l7V
      C9yQcXFrdYGPf/ozNiIJI6pr01Q07t74hBt3xutf8lNhLHXpRomC9rNiiAHki+O2OersiOM+
      vHWbF2E+oKaJ4849eYjTHyS0ukpn7yAWs4Zk87ww0aBtKvFs4rjNomniuH5/B6nwGr7hsyyN
      3Sbn9PDqRW9ZlTBorDpaWxmuvlQSx92VRBSURMsEwzX8drsrjjs7t5T3+qkxOzuL6A6w/ngC
      X/cgJ7r9pGS1rQz3givDffiDHzAz9QjFYin5zWZ34PN5sTk9oKYZn5zG53UZKo1YXEaTxHFN
      XLm64+bq6mq+Olib+nGQOG4kHAKLGzEnlwTDHUYaUa+DNKLxwXBVxHHbHC0OEsfdl0RsHZr7
      xqmrPBwfZzsUIx6PkFaMe05t0waabADy7kvwo0mm51fbHqA2htPUnDyz28/6xM5LsMNpIpnN
      4XzW+TnbtHkGGna1xePx6hsBIydP7v2tyWniMqQ1EdFb9NIQj6MIbpS89SZbP2o8TsbWh5a3
      XhE8yPE4qaIyVHnnBShbXHYq9dxl19o+JZ2Gw7avTsfeqPE1m80iy8+n61pyzouOQZUFtLw+
      MNn6keWivireR5PI5fWPIuwIb+WXYYgy3L0b/8Dd21E++BdfPpQCTFsZ7kWuM8Mf/8F3ePna
      ea5dO7wqRKOU4aqdV0OeN5zubs5f6z60/JG6dJN4e5bIFxSRkeFOBkbONrshh8KQt067KBCO
      xGiuEHYbo1BVlVQq1exmHApDRoDVzTC5eIwcpVkBjST1l4Xh0NZf/saBObrPS62zWB5NcsgK
      LC8ucrIoKb4VMSYlsrODREY4MCn+7r27XHn5ygFbVKaSdk9xcnm+jHgjKJzHFjiWOhgmvB4X
      gc7mTX1aC403AF3m/r1JrIFgxcpCq3MsrGxy8nQWp02qGAxXsYoaAsLKra+HNOJu+YXtqtzu
      oyqNuDz7iOX1LboPMVH2+uJDVMcgfR1HWBx3fWoc/2A/ywtbVNIBDvQO847dh8dpBagYDFeJ
      WvJixVyqbE5wraJMxY9Xjg++XTEnuBxHVRpxdSuFz2thc3WFM0OV47w0Jcn04zm8/R66fdaG
      KcNVK7PhZ6DrzAU2p+c5//5pDsr99/l8jW4KQMWc4FplUeqh3XMU6evqYPjsBcgd/F3AZHby
      9jtvE0mJe9G4jVCGq1Zmww1AkKwEnCbGJh7zztudz5WRW6vwVC2oSzdK8o1r1QVqA31DI3zy
      04/oPHGWzmoycKIDX/NSAQCDXoLj8ThyIokCWJ+jnGYIT7WpFYVkQsZ6yEiAZmPAdwCFe3cm
      kLPZY+kTOW6szD9kbSuJorwYL/gGGICZV157DY/bduS1QdtA39AZTvR24HS9CBnBBj0CWSUV
      ydbkh71npNXnB6hFFc8YzOhmEbflxQhtN8QAwqElHo1FufLWdUO/BLcKjZwlspIqXvPI8Why
      FofTxomhE3UtuXh+L8HqLvjybn3zX9ZcZsMNQFVkAp2D9JyyYau++ZGk0iyR5eTRK1282V/8
      /gvhAEjEs5wb7SLQO1TTfsUBkGWV4Yrm97K88a8K+qScAeSP4OVG74aPU0o2yscffcaT6UdU
      mktcUzJMjd9hZetFkFJqcxCPpx4wMfmYpeW1qtvOzzxicWXDgFbto0WXyS3e2PnuszHV+BEg
      k0jTNXSCPpO1YmUCGlZ3D70djmOvC3RQ6MTztM8o1JzO6KVL9HUHqm7rcDixuA4niwLULItS
      Th06O/af9mTwTf3XGj8CuDu66fQ62NzcqriNpoOcjpFIy8deF0iSpLL/am1fuX9GMDg0RCYZ
      J52tHvweCm2TyZQ/59X6oJIsSv6/cnOEFZfR8F6Jri3w8c0HnD97vuI2osXB6GhbN+UocOsX
      H5E2B7Bbq7s7Ri9cNqBFB9NwAwgMnuG3v36mLvLox4Hc4o0Xehb6L3z5t4Dy8ui1ku8k2JG2
      rz+GjItbqwuMjU0zev0Nen0uI6o89jRvkjyNuzc+I54z83YTZorPN5rcr/5e1Y+vhhhAvjx6
      73XjO+U40rxJ8nbk0ZfmF3n1zastrxBtmDw6zg6uXHwxEqXbPA8SHo+D3/hv/uuWv/jBoKR4
      HdhYXCxJXNlFzca5d+8ukWQ7bf4oIJoE5uYWq273aPIBy2uVvYNG0HADSMdCzCwsE40lKuYC
      pMNRhi6cJR6ONro5bRrM9Pg4G6vrSI5qU5/q2N1+NCVtSLsq0XADEBCQzGYsZnNFA3B1dbM6
      PUuwp1oGRZtWRxRFJPOOD/5gBDQljcPtN6Rdldh7B4jFGqWYIHL+/AXOn4d0LEYle+8fHERO
      xZGBjNmH+eJvoev7k8rosRiqdxQ1b73J008uFiM3+B6ad3Rvfc57jmwshnxxxyW3u14TPOjo
      5IrKVlMpcs9Zdq3tk9NpxEO2r17HvnsDymazZLOVAlOej2DfEMG+nTigateUr6Mb0IjFYiXn
      XH96DLvLquBGz+sD0duPLLgK+qp4H8XsRx98D9Uzutc3QEEZhkgj1ko5mTxVVcveVeqxvpKE
      Xi1l1NqOSlKA9Si71jpbgeK2FR/DYfqleLnceS3epmVlCXJyhompacyCyKnLF7E8bXQqEePx
      zBxmq53zo2dKOiWVSuFwOPbWJ7c3mFlfpaNjhL5uD6IolpS9t2+FsiOhFRaWYjjddk6NDBXU
      mU2lEB0OpLx19z/5FMfAAKcH+iuWsYPGkwdjmHxOzOYgAz3l22epcoyg8Okn9xkY6KF/r87S
      sludRCzCzNwCVruT0TOnkDMppqYfI4hmLl/MiyRQs6RyIg6rBEqST+7PMNDTwUB/X0EZfT1d
      ZfpS4MmD+3v90rIfZyWLje6Ai7iiFVipw+XBKgoIUkkoGbKcQ5HzPUk6giShpGRszv1g7FrL
      9gV6QUthKroQc7KMrCgFqZ6apuJ0O8gp6iHKMHHi1CDhtW0k2/6cWpXaByDLctExgqrq2Cyg
      i/nzcpUvu5VxeXyIAkjizmVpsTkIuKwo2v7boyzL6GoORd3pdVUXsKAgWmxlyyjty8J+aVkD
      AEimY6zPrJZoim7MLRJKFmpPJmJr3Lo5RiSRH1KtE4lESGdl4rFCD1MtZYPCwtwqqWThG8zM
      g/s8Xl4tWJdJJUkpMtGtLWRVr1pGMhQllIiSihetL9M+JZvi1s1bbGyHCraNR6NksxlCkaJj
      rFB2KzO3uEAyT1c0HdtgZnX/eB/cv8Pi4iK7kwlFoxGymTSRaLxiGcV9md8v4je/+c1vNvKA
      noVsNovVakXVRE4MdmNzufY+aSvZLM6AF7fLi8e1L7NlsdpYeDKDzemiI7CrMSSgJiIITivT
      j9c5PdK/v73ZitPnwe/3osgyVuuOXoXD68bvcuPKy2nNZmXcLgcdXd3Y8+6mNqvEwuY6A339
      e+0zW6xsb4WQiJPIOOnw77fRbrMSCAax26x7x5hTcvSfHEZCxOHYLVtF0yR8QT9+n3fvLiVK
      ZiIrSyRNZvq69qUHbXaJ0HaKldkZBkbP7I0aotWKWbLQ1dWBxSzu1dmK7LbN6/bgcrtxOZ2g
      KmiSk6Dfjc+78whnlSRmZh7T0TeM0yJil1S2UwKzM9OMnjkNgMdhx+kLYJHEstdRDrDZnHT3
      dLb2CCBnUkTSmYJ4DrPViqxo9HcXa0/qePwB3EXJ2FaXB0ly8u7nXilYn4jHiMRKpTsSiThy
      UVy51WpGkGz4vYVxTGouh9ffW+LedbscdA9e5OzJ/DbqRELbJNKFglEmQWV1eQOLPf/CFFFk
      mYETAyWxLG6fB6+z+IVdxG638Obn3y3IulPlNFtbIXIt5+aoTCIeJZd7ensXzciyzImB/RtX
      LqfRPzCAWXza66IVu0Xi8+++u7dNLBYhHk/sLRdfRyZVwdPZi8Nqbm0D0HIygkkskVNJxiKs
      bhR/QTShqTJWW2HipapkyCgqmlZYitPlxucp9fxksxkkc3Eor0poc5NwtNBgzFYRSVFKDCCd
      TqMWJWuAgK+jA5e98A4smCCT1ZCKzoSczbC8tEJxKRlVw+UovovrpNPpkgQRyWKnsyNQUnYr
      k81kMJstectJllb2HzOtokZKs2CTdn3EKul0Bk3dT5bxeHy4Xfs3q+LrSJGzbG6ukcoorW0A
      gkkim0hQnMdlt5f7yqiTiCXY2touXG114raIFF+lq6trxCNhivOOLGYLsWix/1rCbi+Nb9dU
      ge3EVkH7lGwWf2dHSaIKqIRCMdbWClMFtZyOzaoTSxSODC6nHbWMh1qJJ1guSi7KZnN0dAb2
      Pxw8JbG1RlaTWd9+MbT6YecRMhqL7C077Xbyu0EVJMIrM8SzO72ezUFnwF1w6JvbITY39vu5
      +DpyeL3oT6d0amkDsDscWOz2kseAxakppkpiTUz4Ovw7z457yIRCUSLb60Rj+x9+cnIGk8lE
      RhdKVCrsDjv2ks/4OSYnHrGwuFRYoyTh9gQLbGttfZ10Ikm06IU0EoqhaxlcnkINVIvDjoiI
      3VHoqYnGtrjz8Z2Sl/RA0I/TXviYt76+STIZJxqO5K3VyOgC4Y0QHYEXISxtB4fdjsO+/94U
      21rk4ztTe8uSZKEzGNx7BFrfDJGMRwg/7e9ELIKg61jt+yNA8XWU2AoxvzDN8nqc/x9TxYMg
      m+9oSAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q25_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q25_2' width='192'>
      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
      SDsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q25_3' width='192'>
      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
      BxZf0tJxDtpaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q26_1' width='192'>
      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
      LNDnp/9CiAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q26_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q26_3' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
